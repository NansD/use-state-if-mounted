{"version":3,"file":"static/webpack/static/development/pages/index.js.cfe6921ae675ffec2ed8.hot-update.js","sources":["webpack:///../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./pages/index.js"],"sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import Head from \"next/head\";\n\nimport { useStateIfMounted } from \"../../use-state-if-mounted\";\nimport { toCamel } from \"../lib/util\";\n\nimport hookConfig from \"../../use-state-if-mounted/package.json\";\n\nexport default function Index() {\n  const { name, description, repository = {}, author = {} } = hookConfig;\n\n  const { name: authorName, url: authorUrl } = author;\n\n  const { url: repositoryUrl } = repository;\n  const repositoryExists = typeof repositoryUrl === \"string\";\n\n  const repositoryUrlDisplay =\n    repositoryExists && repositoryUrl.split(\"://\")[1];\n\n\n    const [count, setCount] = useStateIfMounted(initialCount);\n\n  return (\n    <>\n      <Head>\n        <title>Hook - useStateIfMounted</title>\n        <meta property=\"og:title\" content=\"My page title\" key=\"title\" />\n      </Head>\n      <Head>\n        <meta property=\"og:title\" content=\"My new title\" key=\"title\" />\n      </Head>\n      <main>\n        <style jsx global>{`\n          body {\n            font-family: sans-serif;\n            padding: 0;\n            margin: 0;\n          }\n\n          main {\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            padding: 1em 0;\n          }\n\n          h1 {\n            font-size: 2em;\n          }\n\n          img {\n            max-width: 100%;\n          }\n\n          pre {\n            overflow: auto;\n            max-height: 15em;\n            background-color: #eeeeee;\n            padding: 1em;\n          }\n\n          section,\n          footer {\n            width: 100%;\n            max-width: 50em;\n            margin: 0 auto;\n          }\n\n          footer p {\n            font-size: 0.9em;\n          }\n\n          footer p,\n          footer a {\n            color: #546e7a;\n          }\n        `}</style>\n\n        <section>\n          <h1>{toCamel(name)}</h1>\n\n          <p>{description}</p>\n\n          {repositoryExists && (\n            <p>\n              <a href={repositoryUrl}>{repositoryUrlDisplay}</a>\n            </p>\n          )}\n\n          <h2>How to use</h2>\n\n          <p>\n            Use this hook just like React's&nbsp;\n            <a href=\"https://reactjs.org/docs/hooks-reference.html#usestate\">\n              useState\n            </a>\n            .\n          </p>\n          <p>\n            This one hook only updates state if the component that called this\n            hook is mounted. This allows us to avoid memory leaks and messages\n            like this one :\n          </p>\n          <code>\n            Warning: Can't perform a React state update on an unmounted\n            component. This is a no-op, but it indicates a memory leak in your\n            application. To fix, cancel all subscriptions and asynchronous tasks\n            in a useEffect cleanup function. in Child (created by Holder)\n          </code>\n\n          <h2>Examples</h2>\n\n          <p>\n            <strong>Input:</strong>\n          </p>\n          <pre>\n            <code>\n              {`\n  const [count, setCount] = useStateIfMounted(initialCount);`}\n            </code>\n          </pre>\n          <p>\n            <strong>Output:</strong>\n          </p>\n          <p>{message}</p>\n        </section>\n\n        <footer>\n          <p>\n            Made by <a href={authorUrl}>{authorName}</a>\n          </p>\n        </footer>\n      </main>\n    </>\n  );\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AAaA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}